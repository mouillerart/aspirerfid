/*
 * Copyright (C) 2007 ETH Zurich
 *
 * This file is part of Accada (www.accada.org).
 *
 * Accada is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License version 2.1, as published by the Free Software Foundation.
 *
 * Accada is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Accada; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA  02110-1301  USA
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b26-ea3 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.07.21 at 05:25:46 PM CEST 
//


package org.ow2.aspirerfid.rp.proxy.configurator;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;


/**
 * <p>Java class for FieldName.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="FieldName">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="eventTriggers"/>
 *     &lt;enumeration value="eventType"/>
 *     &lt;enumeration value="eventTimeTick"/>
 *     &lt;enumeration value="eventTimeUTC"/>
 *     &lt;enumeration value="readerEPC"/>
 *     &lt;enumeration value="readerHandle"/>
 *     &lt;enumeration value="readerName"/>
 *     &lt;enumeration value="readerRole"/>
 *     &lt;enumeration value="readerNowTick"/>
 *     &lt;enumeration value="readerNowUTC"/>
 *     &lt;enumeration value="tagType"/>
 *     &lt;enumeration value="tagID"/>
 *     &lt;enumeration value="tagIDasPureURI"/>
 *     &lt;enumeration value="tagIDasTagURI"/>
 *     &lt;enumeration value="sourceName"/>
 *     &lt;enumeration value="sourceFrequency"/>
 *     &lt;enumeration value="sourceProtocol"/>
 *     &lt;enumeration value="notifyChannelName"/>
 *     &lt;enumeration value="notifyTriggerName"/>
 *     &lt;enumeration value="allEvent"/>
 *     &lt;enumeration value="allReader"/>
 *     &lt;enumeration value="allTag"/>
 *     &lt;enumeration value="allSource"/>
 *     &lt;enumeration value="allNotify"/>
 *     &lt;enumeration value="all"/>
 *     &lt;enumeration value="allSupported"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlEnum
public enum FieldName {

    @XmlEnumValue("all")
    ALL("all"),
    @XmlEnumValue("allEvent")
    ALL_EVENT("allEvent"),
    @XmlEnumValue("allNotify")
    ALL_NOTIFY("allNotify"),
    @XmlEnumValue("allReader")
    ALL_READER("allReader"),
    @XmlEnumValue("allSource")
    ALL_SOURCE("allSource"),
    @XmlEnumValue("allSupported")
    ALL_SUPPORTED("allSupported"),
    @XmlEnumValue("allTag")
    ALL_TAG("allTag"),
    @XmlEnumValue("eventTimeTick")
    EVENT_TIME_TICK("eventTimeTick"),
    @XmlEnumValue("eventTimeUTC")
    EVENT_TIME_UTC("eventTimeUTC"),
    @XmlEnumValue("eventTriggers")
    EVENT_TRIGGERS("eventTriggers"),
    @XmlEnumValue("eventType")
    EVENT_TYPE("eventType"),
    @XmlEnumValue("notifyChannelName")
    NOTIFY_CHANNEL_NAME("notifyChannelName"),
    @XmlEnumValue("notifyTriggerName")
    NOTIFY_TRIGGER_NAME("notifyTriggerName"),
    @XmlEnumValue("readerEPC")
    READER_EPC("readerEPC"),
    @XmlEnumValue("readerHandle")
    READER_HANDLE("readerHandle"),
    @XmlEnumValue("readerName")
    READER_NAME("readerName"),
    @XmlEnumValue("readerNowTick")
    READER_NOW_TICK("readerNowTick"),
    @XmlEnumValue("readerNowUTC")
    READER_NOW_UTC("readerNowUTC"),
    @XmlEnumValue("readerRole")
    READER_ROLE("readerRole"),
    @XmlEnumValue("sourceFrequency")
    SOURCE_FREQUENCY("sourceFrequency"),
    @XmlEnumValue("sourceName")
    SOURCE_NAME("sourceName"),
    @XmlEnumValue("sourceProtocol")
    SOURCE_PROTOCOL("sourceProtocol"),
    @XmlEnumValue("tagID")
    TAG_ID("tagID"),
    @XmlEnumValue("tagIDasPureURI")
    TAG_ID_AS_PURE_URI("tagIDasPureURI"),
    @XmlEnumValue("tagIDasTagURI")
    TAG_ID_AS_TAG_URI("tagIDasTagURI"),
    @XmlEnumValue("tagType")
    TAG_TYPE("tagType");
    private final String value;

    FieldName(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FieldName fromValue(String v) {
        for (FieldName c: FieldName.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v.toString());
    }

}
